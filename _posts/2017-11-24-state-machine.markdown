---
layout:     post
title:      "状态机与状态机图"
subtitle:   " \"本篇文章旨在介绍什么是状态机，以及状态机的表示方法\""
date:       2017-11-24
author:     "Hope Seebok"
header-img: "img/state-machine/bg.png"
catalog: true
tags:
    - 技术理论
    - UML
---

## 定义

状态机是有限状态机（Finite-state machine）的简称，又称有限状态自动机。

状态机是一个抽象的机器，它拥有有限个状态（State），并且在任意时刻这个机器只处于其中唯一的一个状态。通过外部的输入，可以让状态机从一个状态改变至另一个状态，状态之间的改变称之为转换（Transition）。一个状态机就是由其所有的状态、初始状态以及每个转换的触发条件所定义。

在现代社会的许多设备中可以观察到状态机的行为，这些设备根据发生的一系列事件，来执行预定的动作序列。简单的例子是自动售货机，当硬币以适当的组合被投入时，它分配产品；电梯，其停靠顺序由乘梯人按下的楼层决定；以及组合锁，需要以正确的顺序输入组合数字它才会打开。

有限状态机比其他一些计算模型（如图灵机）具有更少的计算能力。计算能力的区别意味着图灵机可以做的计算任务，但FSM（有限状态机）不能。这是因为FSM的内存受其拥有的状态数量的限制。 FSM往往在自动机理论的更通用领域中进行研究。

#### 补充

状态机是一种抽象的数学模型，从上文定义中可以归纳出它的几个特征，助于理解：
- 状态总数是有限的；
- 任一时刻，只处在一种状态之中；
- 某种条件下，会从一种状态转换到另一种状态。

上文中列举了几个简单状态机的使用实例，非常典型而且易理解，但类型比较单一。其实状态机的使用场景非常非常多，软件编程里的基础通信协议、正则引擎、业务逻辑、硬件编程里机器的控制逻辑、组合电路、时序电路等等。无论对连续系统还是离散系统，状态概念无所不在，有限状态机提供了一种描述和控制应用逻辑的非常强大的方法，具有规则简单、可读性和可验证性强等特点，所以有限状态机的实例也无处不在。

上文中提到了“图灵机”，实际上在数理逻辑层面，图灵机就相当于一个有限状态机加上内存（图灵机当中的无限长纸带）的概念。正是因为有限状态机的状态是有限的而且没有内存的概念，这一点差距造成了上文当中所说的与图灵机的计算差别。

## 举例

投币式旋转栅门的机制可以通过状态机建模。投币式旋转栅门，在地铁和游乐园入口等地方处非常常见，在腰高处有三个旋转臂。最初，旋转臂被锁定，阻挡了入口，顾客需要投币（或刷卡）进入。在顾客投币通过之后，旋转臂将再次锁定直到投入另一枚币。

投币式旋转栅门有两个状态：锁定（Locked）、打开（Unlocked）。有两种输入（input）会影响它的状态，投币（coin）和推动转臂（push）。
抽象出它的行为状态图：
- 在Locked状态， push没有作用，不管push多少次闸门的状态还是lock；
- 在Locked状态，投币会让闸门开锁，闸门可以让一个人通过；
- 在Unlocked状态，投币不起作用，闸门还是开着；
- 在Unlocked状态，如果有人push通过，人通过后闸门会由Unlocked状态转变成Locked状态。

![Turnstile state diagram]("/img/state-machine/turnstile-state-diagram.png")
